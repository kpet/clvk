parameters:
    - name: 'os'
      default: linux
      type: string
      values:
      - windows
      - linux
      - osx
    - name: 'buildType'
      type: string
      default: Release
    - name: 'cmakeFlags'
      default: ''
      type: string
    - name: 'vulkanImplementation'
      default: 'loader'
      type: string
    - name: 'vulkanLoaderDir'
      default: './Vulkan-Loader'
      type: string
    - name: 'useClCache'
      type: boolean
      default: true
    - name: 'useCCache'
      type: boolean
      default: true

steps:
  - script: mkdir build
    displayName: Create build directory
  - task: CMake@1
    inputs:
      workingDirectory: build
      cmakeArgs: '-DCMAKE_BUILD_TYPE=${{ parameters.buildType }}
                  -DCLVK_CCACHE_BUILD=${{ parameters.useCCache }}
                  -DCLVK_VULKAN_IMPLEMENTATION=${{ parameters.vulkanImplementation }}
                  -DCLVK_VULKAN_LOADER_DIR=${{ parameters.vulkanLoaderDir }}
                  -DSPIRV_WERROR=OFF
                  ${{ parameters.cmakeFlags }} ..'
  - ${{ if eq(parameters.os, 'windows') }}:
    - task: MSBuild@1
      inputs:
        solution: 'build/ALL_BUILD.vcxproj'
        msbuildArchitecture: 'x64'
        maximumCpuCount: true platform
        configuration: ${{ parameters.buildType }}
        ${{ if eq(parameters.useClCache, true) }}:
          msbuildArguments: '/p:CLToolExe=clcache.exe'
  - ${{ if ne(parameters.os, 'windows') }}:
    - script: |
        set -ex
        which ccache && ccache --show-stats || echo "ccache not available"
        make -C build -j3
        which ccache && ccache --show-stats || echo "ccache not available"
      displayName: make

